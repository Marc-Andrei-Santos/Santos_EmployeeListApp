@page
@model Santos_EmployeeListApp.Pages.EmployeesModel
@{
    ViewData["Title"] = "Employee List";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Bootstrap Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
</head>
<body class="bg-light">

    <div class="container py-5">
        <h2 class="mb-4 text-center">Employee List Application</h2>

        <div class="d-flex justify-content-end mb-3">
            <button class="btn btn-success" onclick="openCreateModal()">
                <i class="bi bi-plus-circle me-1"></i> Add Employee
            </button>
        </div>

        <table class="table table-striped table-bordered shadow-sm bg-white rounded">
            <thead style="background-color: seagreen; color: white;">
                <tr>
                    <th>Name</th>
                    <th>Role</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="employeeTableBody">
                <!-- Employee rows injected here -->
            </tbody>
        </table>
    </div>

    <!-- Modal for Create/Edit -->
    <div class="modal fade" id="employeeModal" tabindex="-1" aria-labelledby="employeeModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="employeeForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="employeeModalLabel">Add Employee</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="employeeId" />
                        <div class="mb-3">
                            <label for="employeeName" class="form-label">Full Name</label>
                            <input type="text" class="form-control" id="employeeName" required />
                        </div>
                        <div class="mb-3">
                            <label for="employeeRole" class="form-label">Role</label>
                            <input type="text" class="form-control" id="employeeRole" required />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Toast Notification (top center) -->
    <div class="position-fixed top-0 start-50 translate-middle-x p-3" style="z-index: 9999;">
        <div id="toastBox" class="toast align-items-center border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body text-white fw-bold" id="toastMessage">Success!</div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <!-- Bootstrap Bundle JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let employeeModal = new bootstrap.Modal(document.getElementById('employeeModal'));
        let isEditMode = false;

        async function loadEmployees() {
            const response = await fetch('/api/Employee');
            const employees = await response.json();

            const tbody = document.getElementById('employeeTableBody');
            tbody.innerHTML = '';

            employees.forEach(emp => {
                const tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${emp.name}</td>
                    <td>${emp.role}</td>
                    <td>
                        <button class="btn btn-link text-primary p-0 me-2" title="Edit" onclick="openEditModal(${emp.id})">
                            <i class="bi bi-pencil-square"></i>
                        </button>
                        <button class="btn btn-link text-danger p-0" title="Delete" onclick="deleteEmployee(${emp.id})">
                            <i class="bi bi-trash-fill"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(tr);
            });
        }

        function openCreateModal() {
            isEditMode = false;
            document.getElementById('employeeId').value = '';
            document.getElementById('employeeName').value = '';
            document.getElementById('employeeRole').value = '';
            document.getElementById('employeeModalLabel').innerText = 'Add Employee';
            employeeModal.show();
        }

        async function openEditModal(id) {
            isEditMode = true;
            const response = await fetch(`/api/Employee/${id}`);
            const emp = await response.json();

            document.getElementById('employeeId').value = emp.id;
            document.getElementById('employeeName').value = emp.name;
            document.getElementById('employeeRole').value = emp.role;
            document.getElementById('employeeModalLabel').innerText = 'Edit Employee';
            employeeModal.show();
        }

        document.getElementById('employeeForm').addEventListener('submit', async function (e) {
            e.preventDefault();

            const id = document.getElementById('employeeId').value;
            const name = document.getElementById('employeeName').value;
            const role = document.getElementById('employeeRole').value;

            const payload = isEditMode
                ? JSON.stringify({ id: parseInt(id), name, role })
                : JSON.stringify({ name, role });

            let response;

            if (isEditMode) {
                response = await fetch(`/api/Employee/${id}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: payload
                });
            } else {
                response = await fetch('/api/Employee', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: payload
                });
            }

            if (response.ok) {
                const action = isEditMode ? 'updated' : 'created';
                const color = isEditMode ? 'bg-primary' : 'bg-success';
                showToast(`Employee ${action} successfully!`, color);
                employeeModal.hide();
                loadEmployees();
            } else {
                alert('Error saving employee.');
            }
        });

        async function deleteEmployee(id) {
            if (confirm("Are you sure you want to delete this employee?")) {
                const response = await fetch(`/api/Employee/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    showToast('Employee deleted successfully!', 'bg-danger');
                    loadEmployees();
                } else {
                    alert('Failed to delete employee.');
                }
            }
        }

        function showToast(message, colorClass) {
            const toastEl = document.getElementById('toastBox');
            const toastMsg = document.getElementById('toastMessage');
            toastMsg.innerText = message;

            toastEl.className = `toast align-items-center text-white ${colorClass} border-0`;

            const toast = new bootstrap.Toast(toastEl);
            toast.show();
        }

        loadEmployees();
    </script>

</body>
</html>
